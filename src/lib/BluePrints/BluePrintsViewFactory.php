<?php

namespace feiron\felaraframe\lib\BluePrints;

use feiron\felaraframe\lib\BluePrints\BluePrintsBaseFactory;

class BluePrintsViewFactory extends BluePrintsBaseFactory {

    private $ViewClassPrefix;
    private const FormControlGroups=[
        'textarea' => [],
        'options' => []
    ];

    public function __construct($definition = null,$ModelList){
        parent::__construct($definition, $ModelList);
        $this->ViewClassPrefix='fe_view_';
    }

    private function GenerateFormComponent($contrlDefinition){

    }

    private function GenerateDisplayComponent($contrlDefinition){
        return '
            <div class="page_component '. ($contrlDefinition->container_class ?? 'col-md-6 col-sm-12').'" ' . ($contrlDefinition->container_attr??'') . '>
                <div class="row ' . ($contrlDefinition->class ?? '') . '" ' . ($contrlDefinition->attr ?? '') . ' >
                    ' . (empty($contrlDefinition->caption) ? "" : ('
                    <div class="col-md-12">
                        <h5 class="alert alert-info">
                            '. $contrlDefinition->caption.'
                        </h5>
                    </div>
                    ')) . '
                    <div class="col-md-4 col-sm-12">
                        <label>
                            '. ($contrlDefinition->label?? $contrlDefinition->name).' :
                        </label>
                    </div>
                    <div class="col-md-8 col-sm-12">
                        {{$'. $contrlDefinition->name. '??""}}
                    </div>
                </div>
            </div>
        ';
    }

    private function generateNormalPage($PageDefinition){
        $content = '';
        if(strtolower($PageDefinition->usage??'')=== 'display'){
            foreach($PageDefinition->models as $model=>$fields){
                foreach($fields as $field){
                    $content.=$this->GenerateDisplayComponent($field);
                }
            }
            $content= '<div class="container-fluid"><div class="row">'. $content. '</div></div>';
        }else{//CRUD

        }
        return $content;
    }

    private function getPageContents($PageDefinition){

        switch($this->Definition['style']??'normal'){
            case "table":
                break;
            case "accordian":
                break;
            default://normal
                return $this->generateNormalPage($PageDefinition);
        }
        return "";
    }

    public function buildView(){
        if(!empty($this->Definition['name'])){
            $viewName = $this->ViewClassPrefix . $this->Definition['name'];
            $target = self::viewPath . $viewName . '.blade.php';
            $contents = "
            @extends('page')
            @section('content')
                @fePortlet([
                            'id'=>'panel_". $this->Definition['name']."'
                            ".(empty($this->Definition['title'])?'': ("',headerText'=>'<h3>". $this->Definition['title']."</h3>'")). "
                            ])
                    " . (empty($this->Definition['subtext']) ? '' : ("<h5 class='alert alert-info'>" . $this->Definition['subtext'] . "</h5>")) . "
                    " . $this->getPageContents($this->Definition['content']) . "
                @endfePortlet
            @endsection
            ";
            $this->RootStorage->put($target, $contents);
            return $viewName;
        }
        return false;
    }

    private function url($url){
        $url = preg_replace('~[^\\pL0-9_]+~u', '-', $url);
        $url = trim($url, "-");
        $url = iconv("utf-8", "us-ascii//TRANSLIT", $url);
        $url = strtolower($url);
        $url = preg_replace('~[^-a-z0-9_]+~', '', $url);
        return $url;
    }

    public function buildRoutes(){
        $routes='';
        foreach(($this->PageDefinition->routes??[]) as $route){
            $routes .= "
                 Route::". strtoupper($route->type??'GET') . "('" . $this->url(strtolower($route->slug ?? $route->name )) . "', 'general_report@show')->name('bp.". $route->name."');
            ";
        }
        $this->RootStorage->put(self::routePath, "<?php
        /*
        |--------------------------------------------------------------------------
        | Web Routes : This route file is generated by FelaraFrame BluePrints. 
        |--------------------------------------------------------------------------
        |
        | IMPORTANT:This route file is loaded within Boot() method located at /Vendor/Feiron/FelaraFrame/FeLaraFrameServiceProvider.php
        |
        | It is recommended to use Laravel's build in route file for WEB requests located at /routes/web.php
        | Use this file only to make changes to those controllers/files generated by the blueprints.
        |
        */

            $routes
        ");
    }

    
}